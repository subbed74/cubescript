//Mapvoting battle by subbed74
//IMPORTANT:  Have the intermission time set high enough to allow people to see the messages and for the script to work.  At least 17 seconds in the server-init.
//Players say 1 or 2 to vote for the map.

//Set some aliases
mapbattle_switch = 0

collectmodes = [collect instacollect efficcollect]
dmmodes = [ffa teamplay insta instateam effic efficteam tac tacteam]

//Mapbattle functions
mapbattle_onimission = [
	//Allow the detection of voting and reset stuff
	mapbattle_switch = 1
	mapbattle_sdswitch = 0
	mapbattle_voters = ""

	//Decide which list of maps to use depending on the mode
	cond (|| (isflagmode) (isinlist $collectmodes (modetostr (getmode)))) [
		battlelist = $ctfmaps
	] (|| (=s (modetostr (getmode)) "capture") (=s (modetostr (getmode)) "regencapture")) [
		battlelist = $capturemaps
	] (isinlist $dmmodes (modetostr (getmode))) [
		battlelist = $ffamaps
	]

	//Select three random maps and begin the voting process
	map1 = (at $battlelist (rnd (listlen $battlelist)))
	map1votes = 0
	battlelist = (strreplace $battlelist $map1 "")

	map2 = (at $battlelist (rnd (listlen $battlelist)))
	map2votes = 0

	say (format "^f3[ MAPBATTLE ] ^f0Vote for the next map by saying 1 or 2! ^f61: %1 ^f1| ^f62: %2" $map1 $map2)
	asleep 13000 [ mapbattle_changemap ]
]

// Do the voting
mapbattle_ontext = [
	if ($mapbattle_switch) [
		if (&& (isinlist $mapbattle_voters [@(getname $arg1)]) (|| (=s $arg2 "1") (=s $arg2 "2"))) [
			pm $arg1 "^f3[ MAPBATTLE ] ^f0You have already voted for a map!"
		] [
			if (|| (=s $arg2 "1") (=s $arg2 "2")) [
				case $arg2 1 [
					map1votes = (+ $map1votes 1)
					mapbattle_voters = (concat $mapbattle_voters " " (format "^"%1^"" (getname $arg1)))
				] 2 [
					map2votes = (+ $map2votes 1)
					mapbattle_voters = (concat $mapbattle_voters " " (format "^"%1^"" (getname $arg1)))
				]

				say (format "^f3[ MAPBATTLE ] ^f5%1 ^f0voted for ^f6%2 ^f1| ^f61: %3^f5(%4) ^f1| ^f62: %5^f5(%6)" (getname $arg1) (? (= $arg2 1) $map1 $map2) $map1 $map1votes $map2 $map2votes)
			]
		]
	]
]

// Check the votes and change the map
mapbattle_changemap = [
	if ($mapbattle_switch) [
		cond (> $map1votes $map2votes) [
			say (format "^f3[ MAPBATTLE ] ^f6%1 ^f0has won the map battle!" $map1)
			mapbattle_switch = 0
			asleep 2000 [ map $map1 ]
		] (> $map2votes $map1votes) [
			say (format "^f3[ MAPBATTLE ] ^f6%1 ^f0has won the map battle!" $map2)
			mapbattle_switch = 0
			asleep 2000 [ map $map2 ]
		] (& (= $map1votes $map2votes) $mapbattle_sdswitch) [
			say "^f3[ MAPBATTLE ] ^f0Tied again!  Choosing a random map..."
			mapbattle_switch = 0
			asleep 2000 [ map (at $battlelist (rnd (listlen $battlelist))) ]
		] [
			say (format "^f3[ MAPBATTLE ] Sudden death!  Vote again! ^f1| ^f61: %1^f5(%2) ^f1| ^f62: %3^f5(%4)" $map1 $map1votes $map2 $map2votes)
			mapbattle_sdswitch = 1
			mapbattle_voters = ""
			asleep 5000 [ mapbattle_changemap ]
		]
	]
]

// Turn off the current mapbattle if no one is on the server
mapbattle_ondisconnect = [
	if (=s (listclients 1 1) "") [
		mapbattle_switch = 0
	]
]

// This is for if the map changes before voting being over, flip the switch
mapbattle_onmapstart = [
	mapbattle_switch = 0
]

//Event handlers
addhandler onimission mapbattle_onimission
addhandler ontext mapbattle_ontext
addhandler ondisconnect mapbattle_ondisconnect
addhandler onmapstart mapbattle_onmapstart
