//Killboxes - Create areas of maps that kill people
//By: subbed74

//DB Stuff
defaultvalue "killbox_db" "default"
defaultvalue "killbox_table" "coord"

sqlite_create_table = "CREATE TABLE `:0` (id INTEGER PRIMARY KEY, name VARCHAR(40), coorda_x REAL, coorda_y REAL, coorda_z REAL, coordb_x REAL, coordb_y REAL, coordb_z REAL, desc TEXT)"
mysql_create_table = "CREATE TABLE IF NOT EXISTS `:0` (id int(6), name varchar(40), coorda_x DOUBLE, coorda_y DOUBLE, coorda_z DOUBLE, coordb_x DOUBLE, coordb_y DOUBLE, coordb_z DOUBLE, desc TEXT, PRIMARY KEY (id)) ENGINE=InnoDB DEFAULT CHARSET=utf8"

db_check_table "killbox" $killbox_db $killbox_table "id name coorda_x coorda_y coorda_z coordb_x coordb_y coordb_z desc" $sqlite_create_table $mysql_create_table

//Default values so errors aren't created
defaultvalue "killbox_create" 0

//Check coordinates and then kill player
coord_check = [
	if (killbox_switch) [
		//Do the loopy thing for players
		looplist var (listclients) [
			curplayercn = (getcn $var)
			curplayerpos = (getpos $curplayercn)
			curplayerx = (at $curplayerpos 0)
			curplayery = (at $curplayerpos 1)
			curplayerz = (at $curplayerpos 2)
			
			//Check if player is in certain areas.  Suicide the player if so.
			looplist curmapcoords $fakecoordlist [
				if (inrange $curplayerx (at $curmapcoords 0 0) (at $curmapcoords 0 1)) [
					if (inrange $curplayery (at $curmapcoords 1 0) (at $curmapcoords 1 1)) [
						if (inrange $curplayerz (at $curmapcoords 2 0) (at $curmapcoords 2 1)) [
							suicide $curplayercn
						]
					]
				]
			]
		]
	
		sleep 500 coord_check
	]
]

//Turn on the coordinate checking if the map is in the database
killbox_onmapstart = [
	killbox_querystring = (format "SELECT * FROM %1 WHERE name='%2'" $killbox_table (getmap))
	killbox_query = (db_query $killbox_querystring $killbox_db)
	
	mapcoords = ""
	mapcoordids = ""
	mapcoorddescs = ""
	fakecoordlist = ""
	killbox_switch = 0
	
	if (!=s $killbox_query "") [
		//Put all the matching into a list
		while [row = (db_getrow $killbox_query $killbox_db); result (!=s $row "")] [
			templist = (format "[[%1 %2] [%3 %4] [%5 %6]] " (at $row 2) (at $row 5) (at $row 3) (at $row 6) (at $row 4) (at $row 7))
			mapcoords = (concat $mapcoords $templist)
			mapcoordids = (concat $mapcoordids " " (at $row 0))
			mapcoorddescs = (format "%1 ^"%2^"" $mapcoorddescs (at $row 8))
			
			//Create a fake list of coords for checking if a player is within the min/max range.
			if (<= (at $row 2) (at $row 5)) [ //For the x-coordinate
				coorda_x = (at $row 2)
				coordb_x = (at $row 5)
			] [
				coorda_x = (at $row 5)
				coordb_x = (at $row 2)
			]
		
			if (<= (at $row 3) (at $row 6)) [ //For the y-coordinate
				coorda_y = (at $row 3)
				coordb_y = (at $row 6)
			] [
				coorda_y = (at $row 6)
				coordb_y = (at $row 3)
			]
		
			if (<= (at $row 4) (at $row 7)) [ //For the z-coordinate
				coorda_z = (at $row 4)
				coordb_z = (at $row 7)
			] [
				coorda_z = (at $row 7)
				coordb_z = (at $row 4)
			]
			
			tempfakelist = (format "[[%1 %2] [%3 %4] [%5 %6]] " $coorda_x $coordb_x $coorda_y $coordb_y $coorda_z $coordb_z)
			fakecoordlist = (concat $fakecoordlist $tempfakelist)
		]
		
		killbox_switch = 1
		coord_check
	]
]

//Commands for the killbox
cmd_addkillbox = [
	if (! $killbox_create) [
		killbox_create = 1
		killbox_firstpos = (getpos $arg1)
		killbox_desc = $arg2
		
		pm $arg1 "^f3[ KILLBOX ] ^f0Killbox creation started!  Please move to the opposite corner to create the box, then run #addkillbox again."
	] [
		killbox_secondpos = (getpos $arg1)
		if (!=s $arg2 "") [ killbox_desc = $arg2 ] 
		
		//Set the position variables
		coorda_x = (at $killbox_firstpos 0)
		coorda_y = (at $killbox_firstpos 1)
		coorda_z = (at $killbox_firstpos 2)
		coordb_x = (at $killbox_secondpos 0)
		coordb_y = (at $killbox_secondpos 1)
		coordb_z = (at $killbox_secondpos 2)
		
		//Add the things to the DB
		db__uid = (db_get_dbuid $killbox_db)
		
		cases (db_get_engine $login_db) "sqlite3" [
			sqlite3_query $db__uid "BEGIN TRANSACTION"
			sqlite3_pquery $db__uid "INSERT INTO `:0` (name, coorda_x, coorda_y, coorda_z, coordb_x, coordb_y, coordb_z, desc) VALUES (':1', :2, :3, :4, :5, :6, :7, ':8')" $killbox_table (getmap) $coorda_x $coorda_y $coorda_z $coordb_x $coordb_y $coordb_z $killbox_desc
			res = (sqlite3_query $db__uid "COMMIT")
		] "mysql" [
			res = (mysql_pquery $db__uid "INSERT INTO `:0` (name, coorda_x, coorda_y, coorda_z, coordb_x, coordb_y, coordb_z, desc) VALUES (':1', :2, :3, :4, :5, :6, :7, ':8')" $killbox_table (getmap) $coorda_x $coorda_y $coorda_z $coordb_x $coordb_y $coordb_z) $killbox_desc
		] [
			res = -1
		]
		
		if (= $res -1) [
			db_error $killbox_db
		] [
			pm $arg1 "^f3[ KILLBOX ] ^f0You have successfully created a killbox!  Reload the map for changes."
			killbox_create = 0
		]
	]
]

cmd_delkillbox = [
	playerpos = (getpos $arg1)
	
	//Check if a killbox exists on this map
	killbox_querystring = (format "SELECT * FROM %1 WHERE name='%2'" $killbox_table (getmap))
	killbox_query = (db_query $killbox_querystring $killbox_db)
	
	if (= $killbox_query -1) [
		db_error $killbox_db
	] [
		rowexists = (db_getrow $killbox_query $killbox_db)
		if (=s $rowexists "") [
			pm $arg1 "^f3[ KILLBOX ] ^f0A killbox does not exist on this map."
		] [
			//Check the ID against the list and delete the box if it exists
			if (isinlist $mapcoordids $arg2) [
				killbox_delstring = (format "DELETE FROM %1 WHERE id=%2 AND name='%3'" $killbox_table $arg2 (getmap))
				killbox_query = (db_query $killbox_delstring $killbox_db)
				
				if (= $killbox_query -1) [
					db_error $killbox_db
				] [
					pm $arg1 "^f3[ KILLBOX ] ^f0The killbox was successfully deleted!  Reload the map for changes."
				]
			] [
				pm $arg1 "^f3[ KILLBOX ] ^f0A killbox with that ID doesn't exist!"
			]
		]
	]
]

cmd_listkillbox = [
	if (killbox_switch) [
		loop i (listlen $mapcoordids) [
			boxcoordlist = (at $mapcoords $i)
			boxcoords = [@(at $boxcoordlist 0 0) @(at $boxcoordlist 1 0) @(at $boxcoordlist 2 0)]
			
			killboxmessage = (format "^f3[ KILLBOX ] ^f6ID: ^f0%1 ^f3| ^f6X: ^f0%2 ^f6Y: ^f0%3 ^f6Z: ^f0%4 ^f3| ^f6Desc: ^f0%5" (at $mapcoordids $i) (at $boxcoords 0) (at $boxcoords 1) (at $boxcoords 2) (at $mapcoorddescs $i))
			pm $arg1 $killboxmessage
		]
	] [
		pm $arg1 "^f3[ KILLBOX ] ^f0There are no killboxes on this map."
	]
]

cmd_cancelkillbox = [
	if (killbox_create) [
		killbox_create = 0
		pm $arg1 "^f3[ KILLBOX ] ^f0You are no longer creating a killbox!"
	] [
		pm $arg1 "^f3[ KILLBOX ] ^f0No killbox is currently being created."
	]
]

//Helpful Functions
inrange = [
	if (& (>= $arg1 $arg2) (<= $arg1 $arg3)) [ result 1 ] [ result 0 ]
]

//Commands and Events
registercommand "addkillbox" cmd_addkillbox 2 "|s" "addkillbox (DESC) | Creates a box where the player is standing with a description.  After the first run, move to the second area and run the command again to create the box.  Adding a description for the box is optional and can be given on either run, or changed on the second run."
registercommand "delkillbox" cmd_delkillbox 2 "i" "delkillbox | Deletes a kill if one exists where the player is standing."
registercommand "listkillbox" cmd_listkillbox 2 "" "listkillbox | Returns a list of any killboxes on this map with their IDs and locations."
registercommand "cancelkillbox" cmd_cancelkillbox 2 "" "cancelkillbox | Stops the creation of a killbox."

addhandler "onmapstart" $killbox_onmapstart