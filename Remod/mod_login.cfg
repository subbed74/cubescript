//Login System for Remod by subbed74

//DB functions
defaultvalue "login_table" "login"
defaultvalue "login_db" "default"

sqlite_create_table = "CREATE TABLE `:0` (id INTEGER PRIMARY KEY NOT NULL, name VARCHAR(40) NOT NULL, password CHAR(64) NOT NULL, loggedin INTEGER, currentcn INTEGER)"
mysql_create_table = "CREATE TABLE IF NOT EXISTS `:0` (id int(6) NOT NULL, name varchar(40) NOT NULL, password char(64) NOT NULL, loggedin BIT(1), currentcn int(6), PRIMARY KEY (id)) ENGING=InnoDB DEFAULT CHARSET=utf8"

db_check_table "login" $login_db $login_table "id name password loggedin currentcn" $sqlite_create_table $mysql_create_table

//Login system functions
login_adduser = [
	login_username = $arg1
	login_password = $arg2
	
	//Register the new user
	db__uid = (db_get_dbuid $login_db)
	
	cases (db_get_engine $login_db) "sqlite3" [
		sqlite3_query $db__uid "BEGIN TRANSACTION"
		sqlite3_pquery $db__uid "INSERT INTO `:0` (name, password, loggedin, currentcn) VALUES (':1', ':2', 0, 0)" $login_table $login_username $login_password
		res = (sqlite3_query $db__uid "COMMIT")
	] "mysql" [
		res = (mysql_pquery $db__uid "INSERT INTO `:0` (name, password, loggedin, currentcn) VALUES (':1', ':2', 0, 0)" $login_table $login_username $login_password)
	] [
		res = -1
	]
	
	if (=s $res -1) [ db_error $login_db ] [ echo (format "A new user (%1) was registered!" $login_username) ]
]

//Check if user is already in database
login_userexists = [
	login_username = $arg1
	
	login_querystring = (format "SELECT * FROM %1 WHERE name='%2'" $login_table $arg1)
	login_query = (db_query $login_querystring $login_db)
	
	if (= $login_query -1) [
		db_error $login_db
	] [
		login_rowexist = (db_getrow $login_query $login_db)
		db_finalize $login_query $login_db
		
		if (=s $login_rowexist "") [ res = 0 ] [ res = 1 ]
	]
	
	
	result $res
]

//Check if user is logged in
login_userloggedin = [
	login_username = $arg1
	
	login_querystring = (format "SELECT * FROM %1 WHERE name='%2' AND loggedin=1" $login_table $arg1)
	login_query = (db_query $login_querystring $login_db)
	
	if (= $login_query -1) [
		db_error $login_db
	] [
		login_therow = (db_getrow $login_query $login_db)
		db_finalize $login_query $login_db
		
		if (=s $login_therow "") [ res = 0 ] [ res = 1 ]
	]
	
	result $res
]

//Login Commands
cmd_register = [
	login_name = (getname $arg1)
	login_password = $arg2
	
	//Check if a password was not set (if they somehow got around the argument requirement or variables fail), continue if was
	if (=s $login_password "") [
		pm $arg1 "^f3[ ERROR ] ^f0You must specify a password!"
	] [
		//Check if user already exists, register if doesn't.
		if (login_userexists $login_name) [
			pm $arg1 "^f3[ ERROR ] ^f0Your username is already registered!"
		] [
			login_adduser $login_name (sha256 $login_password)
			pm $arg1 "^f6[ LOGIN ] ^f0You have successfully registered!  Use ^f5#login USERNAME PASSWORD ^f0to login to the server!"
		]
	]
]

cmd_login = [
	login_name = $arg2
	login_password = (sha256 $arg3)
	
	//Check if user already exists, then check password.
	if (login_userexists $login_name) [
		login_querystring = (format "SELECT * FROM %1 WHERE name='%2'" $login_table $login_name $login_password)
		login_query = (db_query $login_querystring $login_db)
		
		if (= $login_query -1) [
			db_error $login_db
		] [
			login_userrow = (db_getrow $login_query $login_db)
			db_finalize $login_query $login_db
			
			if (=s $login_password (at $login_userrow 2)) [
				login_querystring = (format "UPDATE %1 SET loggedin=1 WHERE name='%2' AND password='%3'" $login_table $login_name $login_password)
				login_query = (db_query $login_querystring $login_db)
				
				if (= $login_query -1) [
					db_error $login_db
				] [
					pm $arg1 (format "^f6[ LOGIN ] ^f0You have successfully logged in as ^f5%1" $login_name)
					setvar $arg1 "logincheck" 1
					setvar $arg1 "login_mutelock" 0
					setvar $arg1 "loginname" $login_name
					mute $arg1 0
				]
			] [
				pm $arg1 "^f3[ ERROR ] ^f0Incorrect username/password!"
			]
		]
	] [
		pm $arg1 "^f3[ ERROR ] ^f0That username is not registered!"
	]
]

//Event funtions
login_onconnect = [
	//Check if user exists in the DB
	if (login_userexists (getname $arg1)) [
		//Check if user is not logged in
		if (! (login_userloggedin (getname $arg1))) [
			//Mute, spec, and message the player
			mute $arg1 1
			pm $arg1 "^f6[ LOGIN ] ^f0You are using a registered name!  Use ^f5#login NAME PASSWORD ^f0to login to the server, or change usernames!"
			setvar $arg1 "login_mutelock" 1
		]
	]
]

login_ondisconnect = [
	if (login_userexists (getname $arg1)) [
		if (& (login_userloggedin (getname $arg1)) (getvar $arg1 "logincheck")) [
			login_querystring = (format "UPDATE %1 SET loggedin=0 WHERE name='%2'" $login_table (getname $arg1))
			db_query $login_querystring $login_db
		]
	]
]

login_onswitchname = [
	cond (& (! (login_userexists $arg2)) (getvar $arg1 "login_mutelock")) [  //If switching to an unprotected user from a protected name without being logged in
		setvar $arg1 "login_mutelock" 0
		mute $arg1 0
		pm $arg1 "^f6[ LOGIN ] ^f0You have been unmuted!"
	] (& (login_userexists $arg2) (!=s (getvar $arg1 "loginname") $arg2)) [  //If switching to a protected name if you are not already logged into this specific name
		pm $arg1 "^f6[ LOGIN ] ^f0The username you have switched to is protected!  Please ^f1#login ^f0or change to a non-registered name!"
		mute $arg1 1
		setvar $arg1 "login_mutelock" 1
	] (& (login_userexists $arg2) (=s (getvar $arg1 "loginname") $arg2)) [  //If switching to a protected name while being logged in to that name
		if (& (ismuted $arg1) (getvar $arg1 "login_mutelock")) [ mute $arg1 0; setvar $arg1 "login_mutelock" 0 ]
	]
]

//Commands and event handlers
registercommand "register" cmd_register 1 "s" "register [PASSWORD] | Registers a user with the given password.  Your current username will be used as the name."
registercommand "login" cmd_login 1 "ws" "login [USERNAME] [PASSWORD] | Logs a user in using the given name and password."

addhandler onconnect login_onconnect
addhandler ondisconnect login_ondisconnect
addhandler onswitchname login_onswitchname