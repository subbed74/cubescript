//Frag Records (Vanilla Edition) 2.0 - by [FD]Venera
//Save this code as "fragrecords.cfg" then add 'exec "/PATH/TO/fragrecords.cfg"' to your autoexec.cfg to install the script.

//This script will keep track of your frag records for every mode except coop-edit.  
//When your frags in a game surpass the current frags stored for that map/mode, it will update with all of your stats for that game.

//fragdata_MAPNAME = [ [MODENUM FRAGS DEATHS KpD ACC FLAGS (if applicable)] [MODENUM2 FRAGS2 ... ] ]
//fragmodes_MAPNAME = [MODENUM MODENUM MODENUM]
//fragdata_list = [MAPNAME MAPNAME2 MAPNAME3 ...]

//Set the bind and say it's working
fragkey = "p"
bind $fragkey [ showgui "Frag Records" ]
echo (format "^f6[ RECORDS ] ^f0Frag Records activated!  Open the menu with ^f6%1" $fragkey)

//Check if aliases needed are set, if not, set them
if (=s (getalias fragdata_list) "") [ fragdata_list = "" ]

//Frag Records GUI
newgui "Frag Records" [  //Main GUI
	guistayopen [
		guititle "^f3[ MAP LIST ]"
		guibar
		guilist [
			guitext "^f6Search: "
			guifield fragdata_searchbox 20
			guibar
			guibutton "^f0Go" [ fragdata_search $fragdata_searchbox ]
		]
		guibar
		//Loop the current list and create buttons
		tabindex = 0
		tabcounter = 1
		looplist mapbutton $fragdata_list [
			if (= $tabindex 14) [
				guitab $tabcounter
				tabcounter = (+ $tabcounter 1)
				tabindex = -4
			]
			guilist [
				if (customize_switch) [ guibutton "^f3X  " [fragdata_clearmap @mapbutton] ]
				guibar
				guibutton $mapbutton [fragdata_viewmap = @mapbutton; showgui "Records"]
			]
			tabindex = (+ $tabindex 1)
		]
	]
]

newgui "Records" [  //Map GUI
	guistayopen [
		tempname = [fragdata_@fragdata_viewmap]
		fragdata = (getalias $tempname)
	
		//Title the list with the map name
		guititle $fragdata_viewmap
		guibutton "^f3Map list" [showgui "Frag Records"]
		guibar
	
		//Loop through the list of data and do the thing
		looplist curdata $fragdata [
			if (inlist $fragctfmodes (at $fragmodenames (at $curdata 0))) [
				guilist [
					if (customize_switch) [ guibutton "^f3X  " [ fragdata_clearmode @fragdata_viewmap @(at $curdata 0) ] ]
					datatext = (format "^f6%1 ^f1| ^f5Frags: ^f0%2 ^f5Deaths: ^f0%3 ^f5KpD: ^f0%4 ^f5Acc: ^f0%5 ^f5Flags: ^f0%6" (at $fragmodenames (at $curdata 0)) (at $curdata 1) (at $curdata 2) (at $curdata 3) (at $curdata 4) (at $curdata 5) (at $curdata 6))
					guitext $datatext
				]
				guibar
			] [
				guilist [
					if (customize_switch) [ guibutton "^f3X  " [ fragdata_clearmode @fragdata_viewmap @(at $curdata 0) ] ]
					datatext = (format "^f6%1 ^f1| ^f5Frags: ^f0%2 ^f5Deaths: ^f0%3 ^f5KpD: ^f0%4 ^f5Acc: ^f0%5" (at $fragmodenames (at $curdata 0)) (at $curdata 1) (at $curdata 2) (at $curdata 3) (at $curdata 4) (at $curdata 5))
					guitext $datatext
				]
				guibar
			]
		]
	]
]

//Add things to the list(s) on intermission
//Note:  Must have fragrec_intermission in /intermission.  /intermission = [fragrec_intermission]
fragrec_intermission = [
	if (! (inlist $fragdata_list $mapname)) [ //If map doesn't have a record
		fragrec_addrecord 0
	] [ //If the map has a record, check if this mode is already recorded
		mapmodes_alias = [fragmodes_@mapname]
		mapmodes = (getalias $mapmodes_alias)
		
		if (! (inlist $mapmodes (getmode))) [ //If the mode has not been recorded
			fragrec_addrecord 1
		] [  //If the mode exists, compare the frag counts and replace the record if necessary
			fragrec_addrecord 2
		]
	]
]

//Adds records.  0 = Completely new, 1 = map exists, but not mode, 2 = beat previous record
fragrec_addrecord = [
	fragrec_replace = $arg1
	fragrec_add = 1
	
	mapdata_alias = [fragdata_@mapname]
	mapdata = (getalias $mapdata_alias)
	mapmodes_alias = [fragmodes_@mapname]
	mapmodes = (getalias $mapmodes_alias)
	
	echo (flagcheck)
	replacedata = (format "%1 %2 %3 %4 %5 %6" (getmode) (getfrags) (getdeaths) (divf (getfrags) (getdeaths)) (getaccuracy) (? (flagcheck) (getflags) "X"))
	newdata = (concatword "[ " $replacedata " ]")
	replaceloop_switch = 1
	
	case $fragrec_replace 0 [ //Do the thing if the map doesn't exist in records
		fragdata_list = (concat $fragdata_list $mapname)
		alias $mapdata_alias $newdata
		alias $mapmodes_alias (getmode)
		
		fragrec_add = 1
	] 1 [ //Do the thing if the map exists, but the mode does not.
		alias $mapmodes_alias (concat $mapmodes (getmode))
		alias $mapdata_alias (concat $mapdata $newdata)
		
		fragrec_add = 1
	] 2 [ //Do the thing if the new record's frags are higher than the old ones
		loopwhile i (listlen $mapdata) [= $replaceloop_switch 1] [
			tempdata = (at $mapdata $i)
			
			if (&& (= (at $tempdata 0) (getmode)) (> (getfrags) (at $tempdata 1))) [
				alias $mapdata_alias (strreplace $mapdata $tempdata $replacedata)
				replaceloop_switch = 0
				
				fragrec_add = 0
			]
		]
	]
	
	if ($fragrec_add) [
		echo (format "^f6[ RECORD ] ^f0A new record was create for ^f5%1 %2!" (at $fragmodenames (getmode)) $mapname)
	] [
		echo (format "^f6[ RECORD ] ^f0You have beaten your previous record for ^f5%1 %2!" (at $fragmodenames (getmode)) $mapname)
	]
]

fragdata_search = [  //Checks to see if a given map exists within the records
	if (inlist $fragdata_list $arg1) [
		fragdata_viewmap = $arg1
		showgui "Records"
	] [
		echo (format "^f6[ RECORD ] ^f0You do not have any records recorded for ^f5%1" $arg1)
		showgui "Frag Records"
	]
]

fragdata_clearmap = [ //Removes a map and all of its records
	tempname = [fragdata_@arg1]
	alias $tempname ""
	tempname = [fragmodes_@arg1]
	alias $tempname ""
	
	listname = (format " %1" $arg1)
	fragdata_list = (listsplice $fragdata_list "" (indexof $fragdata_list $arg1) 1)
	
	echo (format "^f6[ RECORD ] ^f0All records were erased for ^f5%1" $arg1)
]

fragdata_clearmode = [ //Removes a record for a mode within a map
	mapdataname = [fragdata_@arg1]
	mapdata = (getalias $mapdataname)
	mapmodename = [fragmodes_@arg1]
	mapmodes = (getalias $mapmodename)
	
	looplist curdata $mapdata [
		if (= (at $curdata 0) $arg2) [
			wholedata = (format "[%1]" $curdata)
			
			mapdata = (strreplace $mapdata $wholedata "")
			alias $mapdataname $mapdata
			
			mapmodes = (listsplice $mapmodes "" (indexof $mapmodes $arg2) 1)
			alias $mapmodename $mapmodes
			
			echo (format "^f6[ RECORD ] ^f0Record removed for ^f5%1 %2" (at $fragmodenames $arg2) $arg1)
		]
	]
]

customize = [ //Toggles customization options
	customize_switch = (? (customize_switch) 0 1)
]

//Useful functions and aliases
fragmodenames = [FFA Coop Teamplay Insta "Insta Team" Effic "Effic Team" Tactics "Tactics Team" Capture "Regen Capture" CTF iCTF Protect iProtect Hold iHold eCTF eProtect eHold Collect iCollect eCollect]
fragctfmodes = [CTF iCTF Protect iProtect Hold iHold eCTF eProtect eHold]
inlist = [ result (!= (indexof $arg1 $arg2) -1) ]
flagcheck = [
	if (inlist $fragctfmodes (at $fragmodenames (getmode))) [
		result 1
	] [
		result 0
	]
]