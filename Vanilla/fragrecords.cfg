//Frag Records (Vanilla Edition) 1.0 - by [FD]Venera
//Save this code as "fragrecords.cfg" then add 'exec "/PATH/TO/fragrecords.cfg"' to your autoexec.cfg to install the script.

//This script will keep track of your frag records for every mode except coop-edit.  
//When your frags in a game surpass the current frags stored for that map/mode, it will update with all of your stats for that game.

//fragdata_MAPNAME = [ [MODENUM FRAGS DEATHS KpD ACC FLAGS (if applicable)] [MODENUM2 FRAGS2 ... ] ]
//fragmodes_MAPNAME = [MODENUM MODENUM MODENUM]
//fragdata_list = [MAPNAME MAPNAME2 MAPNAME3 ...]

//Frag Records GUI
newgui "Frag Records" [  //Main GUI
	guititle "^f3[ MAP LIST ]"
	guibar
	//Loop the current list and create buttons
	looplist mapbutton $fragdata_list [
		guibutton $mapbutton [fragdata_viewmap = @mapbutton; showgui "Records"]
	]
]

newgui "Records" [  //Map GUI
	tempname = [fragdata_@fragdata_viewmap]
	fragdata = (getalias $tempname)
	
	//Title the list with the map name
	guititle $fragdata_viewmap
	guibutton "^f3Map list" [showgui "Frag Records"]
	guibar
	
	//Loop through the list of data and do the thing
	looplist curdata $fragdata [
		if (inlist $ctfmodes (at $modenames (at $curdata 0))) [
			datatext = (format "^f6%1 ^f1| ^f5Frags: ^f0%2 ^f5Deaths: ^f0%3 ^f5KpD: ^f0%4 ^f5Acc: ^f0%5 ^f5Flags: ^f0%6" (at $modenames (at $curdata 0)) (at $curdata 1) (at $curdata 2) (at $curdata 3) (at $curdata 4) (at $curdata 5) (at $curdata 6))
			guitext $datatext
			guibar
		] [
			datatext = (format "^f6%1 ^f1| ^f5Frags: ^f0%2 ^f5Deaths: ^f0%3 ^f5KpD: ^f0%4 ^f5Acc: ^f0%5" (at $modenames (at $curdata 0)) (at $curdata 1) (at $curdata 2) (at $curdata 3) (at $curdata 4) (at $curdata 5))
			guitext $datatext
			guibar
		]
	]
]

//Add things to the list(s) on intermission
//Note:  Must have fragrec_intermission in /intermission.  /intermission = [fragrec_intermission]
fragrec_intermission = [
	if (! (inlist $fragdata_list $mapname)) [ //If map doesn't have a record
		fragrec_addrecord 0
	] [ //If the map has a record, check if this mode is already recorded
		mapmodes_alias = [fragmodes_@mapname]
		mapmodes = (getalias $mapmodes_alias)
		
		if (! (inlist $mapmodes (getmode))) [ //If the mode has not been recorded
			fragrec_addrecord 1
		] [  //If the mode exists, compare the frag counts and replace the record if necessary
			fragrec_addrecord 2
		]
	]
]

//Adds records.  0 = Completely new, 1 = map exists, but not mode, 2 = beat previous record
fragrec_addrecord = [
	fragrec_replace = $arg1
	fragrec_add = 1
	
	mapdata_alias = [fragdata_@mapname]
	mapdata = (getalias $mapdata_alias)
	mapmodes_alias = [fragmodes_@mapname]
	mapmodes = (getalias $mapmodes_alias)
	
	replacedata = (format "%1 %2 %3 %4 %5 %6" (getmode) (getfrags) (getdeaths) (divf (getfrags) (getdeaths)) (getaccuracy) (? (flagcheck) (getflags) "X"))
	newdata = (concatword "[ " $replacedata " ]")
	replaceloop_switch = 1
	
	case $fragrec_replace 0 [ //Do the thing if the map doesn't exist in records
		fragdata_list = (concat $fragdata_list $mapname)
		alias $mapdata_alias $newdata
		alias $mapmodes_alias (getmode)
		
		fragrec_add = 1
	] 1 [ //Do the thing if the map exists, but the mode does not.
		alias $mapmodes_alias (concat $mapmodes (getmode))
		alias $mapdata_alias (concat $mapdata $newdata)
		
		fragrec_add = 1
	] 2 [ //Do the thing if the new record's frags are higher than the old ones
		loopwhile i (listlen $mapdata) [= $replaceloop_switch 1] [
			tempdata = (at $mapdata $i)
			
			if (&& (= (at $tempdata 0) (getmode)) (> (getfrags) (at $tempdata 1))) [
				alias $mapdata_alias (strreplace $mapdata $tempdata $replacedata)
				replaceloop_switch = 0
				
				fragrec_add = 0
			]
		]
	]
	
	if ($fragrec_add) [
		echo (format "^f6[ RECORD ] ^f0A new record was create for ^f5%1 %2!" (at $modenames (getmode)) $mapname)
	] [
		echo (format "^f6[ RECORD ] ^f0You have beaten your previous record for ^f5%1 %2!" (at $modenames (getmode)) $mapname)
	]
]

//Useful functions and aliases
modenames = [FFA Coop Teamplay Insta "Insta Team" Effic "Effic Team" Tactics "Tactics Team" Capture "Regen Capture" CTF iCTF Protect iProtect Hold iHold eCTF eProtect eHold Collect iCollect eCollect]

ctfmodes = [CTF iCTF Protect iProtect Hold iHold eCTF eProtect eHold]

inlist = [ result (!= (indexof $arg1 $arg2) -1) ]

flagcheck = (inlist $ctfmodes (at $modenames (getmode)))